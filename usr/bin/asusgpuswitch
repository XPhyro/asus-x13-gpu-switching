#!/bin/bash

GPUDISABLED=$(cat /sys/devices/platform/asus-nb-wmi/dgpu_disable)

if [ $GPUDISABLED = "0" ]; then
  echo "stopping DM"

  systemctl stop display-manager
  sleep 5

  echo "removing nvidia kernel modules"
  rmmod nvidia_uvm
  rmmod nvidia_drm
  rmmod nvidia_modeset
  rmmod nvidia
  sleep 1
  
  echo "calling asus-nb-wmi/dgpu_disable 1 for the first time and rescanning the PCI bus..."
  echo 1 > /sys/devices/platform/asus-nb-wmi/dgpu_disable &
  sleep 1
  echo 1 > /sys/bus/pci/rescan

  echo "calling asus-nb-wmi/dgpu_disable 1 a second time..."
  # Not sure if it's nacessary, but as it's needed for enablement
  # purposes, let's also call it twise while disabling to be sure.
  echo 1 > /sys/devices/platform/asus-nb-wmi/dgpu_disable &
  sleep 1

  echo "restarting display manager"
  systemctl restart display-manager.service
else
  echo "stopping DM"
  systemctl stop display-manager.service
  sleep 5

  echo "asus-nb-wmi/dgpu_disable is set, enabling and rescanning the PCI bus..."
  echo 0 > /sys/devices/platform/asus-nb-wmi/dgpu_disable &
  sleep 1
  echo 1 > /sys/bus/pci/rescan
  
  echo "calling asus-nb-wmi/dgpu_disable 0 a second time..."
  # It has to get called a second time, after the rescan.
  # Otherwise the dGPU does not autosuspend!
  echo 0 > /sys/devices/platform/asus-nb-wmi/dgpu_disable &
  sleep 1

  echo "loading nvidia kernel modules"
  modprobe nvidia "NVreg_DynamicPowerManagement=0x02"
  modprobe nvidia_drm
  modprobe nvidia_modeset
  sleep 1

  echo "restarting display manager"
  systemctl restart display-manager.service
fi

exit 0
